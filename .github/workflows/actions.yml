name: CI Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:    # environment variables
  DOCKERFILE_PATH: Dockerfile

jobs:
  lint:
    name: Lint Dockerfile with Hadolint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code            # Checkout the repository
        uses: actions/checkout@v3
        # Run Hadolint on your Dockerfile
      - name: Lint Dockerfile
        uses: docker://hadolint/hadolint:latest
        with:
          args: ${{ env.DOCKERFILE_PATH }}

  lint-yaml:
    name: Lint YAML Files
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install yamllint
        run: |
          sudo apt-get update
          sudo apt-get install yamllint -y

      - name: Lint YAML Files
        run: |
          echo "Running yamllint on all YAML files"
          yamllint --strict .  # Lint all YAML files in the repository
  
  

  build:
    name: Build Stage
    runs-on: ubuntu-latest
    needs: lint                       # Wait for 'lint' stage to complete
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run Build
        # working-directory: ./git-project  # Adjust this if `docker-compose.yml` is in a subdirectory
        run: |
          echo "Building application"
          docker compose -f docker-compose.yml up --build -d
  test:
    name: Test Stage
    runs-on: ubuntu-latest
    needs: build                      # Wait for 'build' stage to complete
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run Tests
        run: |
          echo "Running tests"
          # Replace with actual test commands

  deploy:
    name: Deploy Stage
    runs-on: ubuntu-latest
    needs: test                       # Wait for 'test' stage to complete
    steps:
      - name: Deploy Application
        run: |
          echo "Deploying application"
          # Add deployment commands here